import xml.etree.ElementTree as ET

# Path to the output file generated by your SUMO simulation
TRIPINFO_FILE = "traffic/tripinfo.xml"

def calculate_average_wait_time():
    """Parses the SUMO tripinfo.xml file and calculates the average waiting time."""
    try:
        tree = ET.parse(TRIPINFO_FILE)
        root = tree.getroot()
    except FileNotFoundError:
        print(f"Error: The file '{TRIPINFO_FILE}' was not found.")
        print("Please run the SUMO simulation from the bash script first.")
        return

    total_wait_time = 0.0
    vehicle_count = 0

    for trip in root.findall('tripinfo'):
        wait_time = float(trip.get('waitingTime'))
        total_wait_time += wait_time
        vehicle_count += 1

    if vehicle_count == 0:
        print("No vehicle data found. The simulation might not have run correctly.")
        return

    average_wait_time = total_wait_time / vehicle_count

    print("\n--- BASELINE PERFORMANCE REPORT (Dumb Timers) ---")
    print(f"Total Vehicles Processed: {vehicle_count}")
    print(f"Total Accumulated Wait Time: {total_wait_time:.2f} seconds")
    print(f"** Average Wait Time per Vehicle: {average_wait_time:.2f} seconds **")
    print("-------------------------------------------------")
    print("This is your target metric. Your AI's goal is to make this number smaller.")

if __name__ == "__main__":
    calculate_average_wait_time()
